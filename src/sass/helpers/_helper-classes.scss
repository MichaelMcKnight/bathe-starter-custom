@use 'sass:map';
@use '../global/variables';
@use '../global/breakpoints';

.list-reset {
	list-style-type: none;
	margin: 0;
	padding: 0;
}

.drop-shadow {
	box-shadow: var(--drop-shadow);
}

.sr-only {
	clip: rect(1px 1px 1px 1px); /* IE6, IE7 */
	clip: rect(1px, 1px, 1px, 1px);
	height: 1px;
	overflow: hidden;
	position: absolute !important;
	width: 1px;
}

.z-index-1 {
	z-index: 1;
}

.z-index-2 {
	z-index: 2;
}

.z-index-3 {
	z-index: 3;
}

.overlay {
	height: 100%;
	left: 0;
	position: absolute;
	top: 0;
	width: 100%;
}

.full-width {
	width: 100%;
}

body .is-layout-flex > .margin-inline-center,
.margin-inline-center {
	margin-inline: auto;
}

.center-background-image {
	background-position: center bottom;
	background-repeat: no-repeat;
	background-size: auto 100%;
}

.gradient-background {
	background: linear-gradient(
		50deg,
		rgb(255 255 255 / 100%) 0%,
		rgb(15 86 119 / 5%) 100%
	);
}

.cover-image-wrap {
	overflow: hidden;
	position: relative;

	&::after {
		content: '';
		display: block;
	}

	img {
		height: 100%;
		left: 50%;
		object-fit: cover;
		position: absolute;
		top: 50%;
		transform: translate(-50%, -50%);
		width: 100%;
	}
}

@include breakpoints.media-breakpoint-up(md) {
	.cover-image-wrap-md {
		overflow: hidden;
		position: relative;

		&::after {
			content: '';
			display: block;
		}

		img {
			height: 100%;
			left: 50%;
			object-fit: cover;
			position: absolute;
			top: 50%;
			transform: translate(-50%, -50%);
			width: 100%;
		}
	}
}

ul.square-bullets {
	list-style: square;
	margin: 0;
	padding: 0 0 0 1rem;

	li::marker {
		font-size: 2rem;
		line-height: 0;
	}
}

.object-fit-cover {
	height: 100%;
	left: 50%;
	object-fit: cover;
	position: absolute;
	top: 50%;
	transform: translate(-50%, -50%);
	width: 100%;
}

$margin-bottom: (
	xsm: 0.25rem,
	sm: 0.5rem,
	md: 0.755rem,
	lg: 1rem,
	xl: 1.5rem,
	xxl: 2rem,
	xxxl: 3rem,
	0: 0,
);

$font-weight: (
	thin: 100,
	extralight: 200,
	light: 300,
	regular: 400,
	medium: 500,
	semibold: 600,
	bold: 700,
	extrabold: 800,
	// black causes issues so we use thick for the key name here.
	thick: 900,
);

.margin-0 {
	margin: 0;
}

.uppercase {
	text-transform: uppercase;
}

.full-bleed {
	clip-path: inset(0 -100vmax);

	&--primary {
		background-color: var(--clr-primary);
		box-shadow: 0 0 0 100vmax var(--clr-primary);
	}

	&--secondary {
		background-color: var(--clr-secondary);
		box-shadow: 0 0 0 100vmax var(--clr-secondary);
	}

	&--black {
		background-color: var(--clr-black);
		box-shadow: 0 0 0 100vmax var(--clr-secondary);
	}
}

.eyebrow {
	font-size: var(--fs-15);
	font-weight: 700;
	letter-spacing: 3px;
	margin-bottom: 0.5rem;
	text-transform: uppercase;

	&.no-text-transform {
		text-transform: none;
	}

	&--large {
		font-size: var(--fs-30);
	}
}

@each $m, $value in $margin-bottom {
	.margin-bottom-#{$m} {
		margin-bottom: $value;
	}
}

@each $weight, $value in $font-weight {
	.font-weight-#{$weight} {
		font-weight: $value;
	}
}

@each $name, $color in variables.$theme-colors {
	.text-color-#{$name} {
		color: #{$color};
	}

	.background-color-#{$name} {
		background-color: #{$color};

		&.full-width {
			box-shadow: 0 0 0 100vmax #{$color};
			clip-path: inset(0 -100vmax);
		}
	}
}

@each $name, $size in variables.$font-sizes {
	.font-size-#{$name} {
		font-size: #{$size};
	}
}

/*
* Creates a class for setting max-width by character count
* goes in fives, .max-ch-5 / .max-ch-10 etc
*/
$i: 0;

@while $i < 200 {
	$i: $i + 5;
	.max-ch-#{$i} {
		max-width: $i * 1ch;
	}
}
